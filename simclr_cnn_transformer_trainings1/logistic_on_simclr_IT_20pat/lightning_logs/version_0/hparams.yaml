classifier: !!python/object:torch.nn.modules.linear.Linear
  _backward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _buffers: !!python/object/apply:collections.OrderedDict
  - []
  _forward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _is_full_backward_hook: null
  _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _modules: !!python/object/apply:collections.OrderedDict
  - []
  _non_persistent_buffers_set: !!set {}
  _parameters: !!python/object/apply:collections.OrderedDict
  - - - weight
      - !!python/object/apply:torch._utils._rebuild_parameter
        - !!python/object/apply:torch._utils._rebuild_tensor_v2
          - !!python/object/apply:torch.storage._load_from_bytes
            - !!binary |
              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
          - 0
          - !!python/tuple
            - 5
            - 184
          - !!python/tuple
            - 184
            - 1
          - false
          - !!python/object/apply:collections.OrderedDict
            - []
        - true
        - !!python/object/apply:collections.OrderedDict
          - []
    - - bias
      - !!python/object/apply:torch._utils._rebuild_parameter
        - !!python/object/apply:torch._utils._rebuild_tensor_v2
          - !!python/object/apply:torch.storage._load_from_bytes
            - !!binary |
              gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
              AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
              aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
              Z2UKcQFYDgAAADk0MDQ1MTIxNDMwNjA4cQJYAwAAAGNwdXEDSwVOdHEEUS6AAl1xAFgOAAAAOTQw
              NDUxMjE0MzA2MDhxAWEuBQAAAAAAAACHQ1k8gjODvd3dhb1MJvG8G5uvPA==
          - 0
          - !!python/tuple
            - 5
          - !!python/tuple
            - 1
          - false
          - !!python/object/apply:collections.OrderedDict
            - []
        - true
        - !!python/object/apply:collections.OrderedDict
          - []
  _state_dict_hooks: !!python/object/apply:collections.OrderedDict
  - []
  in_features: 184
  out_features: 5
  training: true
encoder: !!python/object:torch.nn.modules.linear.Identity
  _backward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _buffers: !!python/object/apply:collections.OrderedDict
  - []
  _forward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _is_full_backward_hook: null
  _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _modules: !!python/object/apply:collections.OrderedDict
  - []
  _non_persistent_buffers_set: !!set {}
  _parameters: !!python/object/apply:collections.OrderedDict
  - []
  _state_dict_hooks: !!python/object/apply:collections.OrderedDict
  - []
  training: true
optim_hparams:
  lr: 0.0001
  lr_hparams: null
  weight_decay: 0
